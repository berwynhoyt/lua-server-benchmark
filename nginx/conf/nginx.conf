worker_processes auto;
error_log logs/error.log;
events {
    worker_connections 1024;
}

env SOCKET_FCGI;
env SOCKET_UWSGI;
env LUA_PATH;

http {
    server {
        listen 8081;
        location / {
            default_type text/html;
            content_by_lua_block {
                ngx.print(
                    "<html><body>",
                    "<p>Hello NGINX-Lua!</p>",
                    "<p>PATH=" .. ngx.var.document_uri .. "</p>")
                if ngx.var.document_uri=='/multiply' then
                    ngx.print("<p>RESULT: ", ngx.var.arg_a, "*", ngx.var.arg_b, "=", ngx.var.arg_a*ngx.var.arg_b, "</p>")
                end
                ngx.print("</body></html>\n")
            }
        access_log off;
        }
    }

    server {
        set_by_lua $socket_fcgi 'return os.getenv("SOCKET_FCGI")';
        listen 8082;
        location / {
            root ../www;
            fastcgi_pass unix:$socket_fcgi;
            fastcgi_param ARG_A $arg_a;
            fastcgi_param ARG_B $arg_b;
            include fastcgi.conf;
        }
        access_log off;
    }

    server {
        set_by_lua $socket_uwsgi 'return os.getenv("SOCKET_UWSGI")';
        listen 8083;
        location / {
            root ../www;
            uwsgi_pass unix:$socket_uwsgi;
            uwsgi_modifier1 6;  # tell WSAPI to expect lua code
            uwsgi_param DOCUMENT_URI $document_uri;
            uwsgi_param ARG_A $arg_a;
            uwsgi_param ARG_B $arg_b;
            include uwsgi_params;
        }
        keepalive_requests 1000;
        access_log off;
    }
}
